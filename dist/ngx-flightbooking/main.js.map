{"version":3,"sources":["./src/app/data.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export default [\n      {\n        \"id\": 1,\n        \"company\": \"Surya Airline, India\",\n        \"source\": {\n            \"key\": \"BLR\",\n            \"airport\": \"Kempegowda International Airport Bengaluru\"\n        },\n        \"destination\": {\n            \"key\":\"DEL\",\n            \"airport\": \"Indira Gandhi International Airport\"\n        },\n        \"is_oneway\": true,\n        \"price\": 4735,\n        \"duration\": 135,\n        \"arrival\": new Date(),\n        \"departure\": new Date(),\n        \"available\": [\n          {\n            \"type\": \"economy\",\n            \"additional_price\": 0\n          },\n          {\n            \"type\": \"economy_plus\",\n            \"additional_price\": 1500\n          },\n          {\n            \"type\": \"first_class_suites\",\n            \"additional_price\": 5000\n          }\n        ]\n      }\n    ]\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport flight_data from './data';\n\nexport class FlightService {\n\n  private data: any;\n\n  constructor() {\n    this.data = flight_data\n  }\n\n  public getFlight() {\n    return this.data;\n  }\n\n  searchFlight(source: string, dest: string) {\n    return this.getFlight().filter((f)=>(f.source.key===source && f.destination.key===dest));\n  }\n\n  booknow(name: string, email: string){\n    return true;\n  }\n\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [FlightService]\n})\nexport class AppComponent {\n\n  source: string;\n  destination: string;\n  booking_date: string;\n  available_flight: any;\n  name: string;\n  email: string;\n  booking_conf_frm_visible: boolean;\n  booking_conf_frm_submit: boolean;\n\n\n  // your code here\n  constructor(public flightService:FlightService){\n    this.available_flight = flightService.getFlight();\n  }\n\n  \n}\n","<!-- Your code here -->\n<div class=\"search-bar\">\n    <form>\n        <h1 id=\"title\">Flight Booking</h1>\n        <label>Source</label>\n        <input type=\"text\" id=\"source\" name=\"source\" [(ngModel)]=\"source\" />\n        <label>Destination</label>\n        <input type=\"text\" id=\"destination\" name=\"destination\" [(ngModel)]=\"destination\" />\n        <label>When</label>\n        <input type=\"date\" id=\"when\" name=\"when\"  [(ngModel)]=\"booking_date\" />\n        <button id=\"search_flights\" role=\"button\" (click)=\"flightService.searchFlight(source,destination)\">Search Flight</button>\n    </form>\n</div>\n<div class=\"search-list\">\n    <div class=\"search-flight\" *ngFor=\"let flight of available_flight\">\n        <div class=\"icon\"></div>\n        <div class=\"details\">\n            <h1>ds</h1>\n            <p>{{flight.company}}</p>\n        </div>\n        <div class=\"duration\">\n            <h1>sdf</h1>\n            <p>{{flight.source.key}} - {{flight.destination.key}}</p>\n        </div>\n        <div class=\"price\">\n            <h1>were</h1>\n            <button id=\"booknow_btn\">Book Now</button>\n        </div>\n    </div>\n</div>\n<div class=\"booknow-frm\">\n    <div class=\"container\">\n        <div>\n            <h2>Your Details</h2>\n            <input type=\"text\" placeholder=\"Your Name\"/>\n            <input type=\"email\" placeholder=\"Your Email\"/>\n            <button id=\"confirm_booking_btn\">Confirm Booking</button>\n            <button>Cancel</button>\n        </div>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}